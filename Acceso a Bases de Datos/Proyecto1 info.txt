En el proyecto de esta unidad vamos a desarrollar una aplicación con una interfaz gráfica que permita registrar usuarios y acceder a su información. Toda la información relacionada con los usuarios se almacenará en un único fichero binario.

La aplicación permitirá realizar lo siguiente:

-Iniciar sesión.
-Ver la información de mi usuario.
-Exportar la información de mi usuario en formato JSON o XML.
-Cambiar la contraseña de mi usuario.
-Borrar mi usuario.

Si el usuario es admin, además, podrá realizar lo siguiente:

-Crear un nuevo usuario.
-Exportar todos los usuarios en un fichero ZIP. El fichero ZIP contiene un JSON y un XML con todos los usuarios.

Además, habrá un fichero de texto que registrará todas las veces que se inicia sesión y se cierra sesión.


Para el desarrollo del proyecto se proporcionan una serie de clases iniciales, las cuales están organizadas en dos paquetes:

gui: contiene las interfaces de la aplicación.
model: se debe definir la lógica de la aplicación.


Las diferentes vistas de la interfaz gráfica de la aplicación ya están creadas en el package gui. Debes hacer alguna modificación sobre ellas para capturar los eventos, pero nada más.

Clases de interfaz grafica:

-Login.java
En esta ventana el usuario puede iniciar sesión con su usuario y contraseña solo si ya está registrado.

Si el usuario no existe o la contraseña es incorreca, se mostrará un diálogo con el mensaje Usuario y/o contraseña incorrectos. No se proporcionará información detallada sobre si es que el usuario no existe o que la contraseña es incorrecta.

Una vez iniciemos sesión, pasaremos a la ventana mostrada por la clase User.java.


-User.java
En esta ventana el usuario podrá realizar acciones sobre su perfil.

En la cabecera se debe mostrar el nombre del usuario que inició sesión.
Si pulsamos en Ver datos, se abrirá la ventana de datos del usuario.
Si pulsamos en Cambiar contraseña, se abrirá la ventana de cambio de contraseña.
Si pulsamos en Borrar usuario, se abrirá la ventana de confirmación de borrado del usuario.
Si pulsamos en Cerrar sesión se volverá a la ventana de inicio.

El el caso de ser el usuario admin, tendremos dos botones adicionales:

Si pulsamos en Crear nuevo usuario, se abrirá la ventana para crear un nuevo usuario.
Si pulsamos en Exportar usuarios, se abrirá una ventana para elegir donde guardar el fichero ZIP con los usuarios.

El usuario admin no tendrá opción para borrar su usuario.

-UserDetails.java
Se mostrarán, en los diferentes campos, los siguientes datos del usuario con la sesión iniciada:

Nombre
Edad
Correo electrónico del usuario.
Al pulsar en Volver se cerrará la ventana y se volverá al menú del usuario

En la parte superior, habrá un menú Exportar que permitirá dos opciones:

XML: exporta los datos del usuario que inició sesión a XML.
JSON: exporta los datos del usuario que inició sesión a JSON.

En ambos casos, al pulsar la opción se abrirá una ventana para elegir dónde guardar el fichero.

-UserChangePassword.java
En esta ventana se puede introducir la nueva contraseña del usuario que ha iniciado la sesión. En la ventana se muestran dos opciones posibles:

Si pulsamos en Cancelar se cerrará la ventana, volviendo al menú del usuario sin realizar el cambio de contraseña.
Si pulsamos en Cambiar, se realizará el cambio y se cerrará la sesión, volviendo a la ventana de inicio.

UserDelete.java
En esta ventana podremos confirmar el borrado del usuario. En la ventana se muestran dos opciones posibles:

Si se pulsa en Borrar, se borrará el usuario y se cerrará la sesión, volviendo a la ventana de inicio.
Si se pulsa en Cancelar, se cerrará la ventana y se volverá al menú del usuario.


En el paquete model se encontrarán las clases que gestionan la lógica de la aplicación.



A continuación, se muestran las clases que contienen el modelo de la aplicación.

Main.java
Es la clase que contendrá el método principal.

package model;

public class Main {
    public static void main(String[] args) {
        App app = new App();
    }
}

App.java
Contendrá la lógica global de la aplicación.

JSON.java
Gestionará la exportación de ficheros JSON:

Exportación de un usuario determinado.
Exportación de todos los usuarios.
XML.java
Gestionará la exportación de ficheros XML:

Exportación de un usuario.
Exportación de todos los usuarios.
FileHandler.java
Gestionará el fichero binario que almacena los usuarios:

Lectura de su contenido.
Escritura del contenido.
Para guardar o leer la información, la información debe ser serializada o deserializada.

La estructura del fichero es la siguiente:

Cabecera: formada por los bytes 0xFF, 0xEE, 0x20, 0x23, 0xEE y 0xFF.
Contenido: datos de los usuarios.
El fichero binario se debe llamar usuarios.bin.

En el caso de que no exista el fichero, se debe crear y añadir el usuario admin automáticamente con los siguientes datos:

Contraseña: admin.
Edad: 0.
Correo electrónico: admin@admin.local.
Si ya existe el fichero, se debe comprobar que:

La cabecera es correcta.
Contiene el usuario admin. En el caso de no existir, se debe crear y guardar los cambios en el fichero.
Session.java
Gestionará las sesiones de los usuarios. Es decir, se encargará de:

Inicios de sesión.
Cierres de sesión.
Cuando un usuario inicia sesión correctamente, esta clase debe mantener el usuario actual hasta que cierre su sesión.

Por otro lado, se encargará de escribir en un fichero de texto session.log cada vez que ocurre un evento de inicio o cierre de sesión. Se debe escribir una línea por inicio o cierre de sesión y cada línea debe contener la siguiente información:

Timestamp.
Nombre de usuario.
Tipo de evento: LOGIN o LOGOUT.

User.java
Representará la información de usuario. Contendrá la siguiente información:

Nombre.
Hash de la contraseña. El algoritmo a utilizar debe ser Bcrypt.
Edad.
Correo electrónico.

Users.java
Representrá la información de todos los usuarios. Se debe utilizar una colección, escogiendo la estructura de datos más óptima para la ocasión.

A continuacion te dejo los codigos de las clases de los GUI:

Login.java:

package gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import model.App;

public class Login extends JFrame implements ActionListener {
	private JPanel contentPane;
	private JTextField textoUsuario;
	private JTextField textoContraseña;
	private JButton btnIniciarSesion;
	private App app;

	public Login(App app)
	{
		this.app = app;

		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(0, 0, 300, 260);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);

		JLabel etiquetaUsuario = new JLabel("Usuario:");
		etiquetaUsuario.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaUsuario.setBounds(40, 20, 46, 14);
		contentPane.add(etiquetaUsuario);

		textoUsuario = new JTextField();
		textoUsuario.setBounds(40, 45, 210, 20);
		contentPane.add(textoUsuario);
		textoUsuario.setColumns(10);

		JLabel etiquetaContraseña = new JLabel("Contraseña:");
		etiquetaContraseña.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaContraseña.setBounds(40, 75, 210, 14);
		contentPane.add(etiquetaContraseña);

		textoContraseña = new JPasswordField();
		textoContraseña.setColumns(10);
		textoContraseña.setBounds(40, 100, 210, 20);
		contentPane.add(textoContraseña);
		textoContraseña.addActionListener(this);

		btnIniciarSesion = new JButton("Iniciar sesión");
		btnIniciarSesion.setBounds(80, 145, 140, 23);
		btnIniciarSesion.addActionListener(this);
		contentPane.add(btnIniciarSesion);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
	}
}


User.java:

package gui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import model.App;

public class User extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JLabel etiquetaMenuUsuario;
	private JButton btnVerDatos;
	private JButton btnCambiarContraseña;
	private JButton btnBorrarUsuario;
	private JButton btnExportarUsuarios;
	private JButton btnCrearNuevoUsuario;
	private JButton btnCerrarSesion;
	private App app;
	private String nombreUsuario;

	public User(App app, String nombreUsuario) {
		this.app = app;
		this.nombreUsuario = nombreUsuario;
		int paddingLeft = 75;

		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(0, 0, 300, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		etiquetaMenuUsuario = new JLabel(nombreUsuario, SwingConstants.CENTER);
		etiquetaMenuUsuario.setFont(new Font("Tahoma", Font.BOLD, 20));
		etiquetaMenuUsuario.setBounds(0, 20, 300, 30);
		contentPane.add(etiquetaMenuUsuario);

		btnVerDatos = new JButton("Ver datos");
		btnVerDatos.setBounds(paddingLeft, 64, 150, 23);
		btnVerDatos.addActionListener(this);
		contentPane.add(btnVerDatos);

		btnCambiarContraseña = new JButton("Cambiar contraseña");
		btnCambiarContraseña.setBounds(paddingLeft, 98, 150, 23);
		btnCambiarContraseña.addActionListener(this);
		contentPane.add(btnCambiarContraseña);

		if(!nombreUsuario.equals("admin")) {
			btnBorrarUsuario = new JButton("Borrar usuario");
			btnBorrarUsuario.setBounds(paddingLeft, 132, 150, 23);
			btnBorrarUsuario.addActionListener(this);
			btnBorrarUsuario.setBackground(Color.decode("#e74c3c"));
			btnBorrarUsuario.setForeground(Color.decode("#ecf0f1"));
			contentPane.add(btnBorrarUsuario);
		}

		btnCerrarSesion = new JButton("Cerrar sesión");
		btnCerrarSesion.setBounds(paddingLeft, 200, 150, 23);
		btnCerrarSesion.addActionListener(this);
		contentPane.add(btnCerrarSesion);

		System.out.println(nombreUsuario);
		if(nombreUsuario.equals("admin")) {
			setBounds(0, 0, 300, 360);

			btnCrearNuevoUsuario = new JButton("Crear nuevo usuario");
			btnCrearNuevoUsuario.setBounds(paddingLeft, 180, 150, 23);
			btnCrearNuevoUsuario.addActionListener(this);
			contentPane.add(btnCrearNuevoUsuario);

			btnExportarUsuarios = new JButton("Exportar usuarios");
			btnExportarUsuarios.setBounds(paddingLeft, 210, 150, 23);
			btnExportarUsuarios.addActionListener(this);
			contentPane.add(btnExportarUsuarios);

			btnCerrarSesion.setBounds(paddingLeft, 270, 150, 23);
		}

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == btnExportarUsuarios) {
			System.out.println("Exportar usuario (ZIP)");
			JFileChooser fileChooser = new JFileChooser();
			fileChooser.setSelectedFile(new File("usuarios.zip"));
			int returnValue = fileChooser.showOpenDialog(null);

			if (returnValue == JFileChooser.APPROVE_OPTION) {
				File selectedFile = fileChooser.getSelectedFile();
				System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
			} else {
				System.out.println("Selección de archivo cancelada.");
			}
		}
	}

}


UserChangePassword.java:

package gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import model.App;

public class UserChangePassword extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JLabel etiquetaNuevaContraseña;
	private JTextField textoNuevoContraseña;
	private JButton btnCambiarContraseña;
	private JButton btnCancelar;
	private App app;
	private String nombreUsuario;

	public UserChangePassword(App app, String nombreUsuario) {
		this.app = app;
		this.nombreUsuario = nombreUsuario;
		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 250, 188);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);

		etiquetaNuevaContraseña = new JLabel("Escribe tu nueva contraseña:");
		etiquetaNuevaContraseña.setFont(new Font("Tahoma", Font.BOLD, 12));
		etiquetaNuevaContraseña.setBounds(21, 22, 192, 14);
		contentPane.add(etiquetaNuevaContraseña);

		textoNuevoContraseña = new JPasswordField();
		textoNuevoContraseña.setBounds(21, 58, 179, 20);
		contentPane.add(textoNuevoContraseña);
		textoNuevoContraseña.setColumns(10);

		btnCancelar = new JButton("Cancelar");
		btnCancelar.setBounds(10, 111, 89, 23);
		btnCancelar.addActionListener(this);
		contentPane.add(btnCancelar);

		btnCambiarContraseña = new JButton("Cambiar");
		btnCambiarContraseña.setBounds(124, 111, 89, 23);
		btnCambiarContraseña.addActionListener(this);
		contentPane.add(btnCambiarContraseña);
	}

	@Override
	public void actionPerformed(ActionEvent e) {

	}

}


UserCreate:

package gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import model.App;

public class UserCreate extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JLabel etiquetaCrearUsuario;
	private JLabel etiquetaNombre;
	private JLabel etiquetaContraseña;
	private JLabel etiquetaEdad;
	private JLabel etiquetaCorreo;
	private JTextField textoNombre;
	private JPasswordField textoContraseña;
	private JTextField textoEdad;
	private JTextField textoCorreo;
	private JButton btnCrear;
	private JButton btnCancelar;
	private App app;

	public UserCreate(App app) {
		this.app = app;
		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 322, 385);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);

		etiquetaNombre = new JLabel("Nombre:");
		etiquetaNombre.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaNombre.setBounds(65, 56, 68, 14);
		contentPane.add(etiquetaNombre);

		etiquetaCrearUsuario = new JLabel("CREAR USUARIO");
		etiquetaCrearUsuario.setBounds(83, 11, 154, 20);
		etiquetaCrearUsuario.setFont(new Font("Tahoma", Font.BOLD, 16));
		contentPane.add(etiquetaCrearUsuario);

		textoNombre = new JTextField();
		textoNombre.setBounds(65, 81, 214, 20);
		contentPane.add(textoNombre);
		textoNombre.setColumns(10);

		etiquetaContraseña = new JLabel("Contraseña:");
		etiquetaContraseña.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaContraseña.setBounds(65, 112, 68, 14);
		contentPane.add(etiquetaContraseña);

		textoContraseña = new JPasswordField();
		textoContraseña.setColumns(10);
		textoContraseña.setBounds(65, 137, 214, 20);
		contentPane.add(textoContraseña);

		etiquetaEdad = new JLabel("Edad:");
		etiquetaEdad.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaEdad.setBounds(65, 168, 68, 14);
		contentPane.add(etiquetaEdad);

		textoEdad = new JTextField();
		textoEdad.setColumns(10);
		textoEdad.setBounds(65, 193, 214, 20);
		contentPane.add(textoEdad);

		etiquetaCorreo = new JLabel("Correo electrónico:");
		etiquetaCorreo.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaCorreo.setBounds(65, 224, 214, 14);
		contentPane.add(etiquetaCorreo);

		textoCorreo = new JTextField();
		textoCorreo.setColumns(10);
		textoCorreo.setBounds(65, 249, 214, 20);
		contentPane.add(textoCorreo);

		btnCrear = new JButton("Crear");
		btnCrear.setBounds(172, 299, 89, 23);
		btnCrear.addActionListener(this);
		contentPane.add(btnCrear);

		btnCancelar = new JButton("Cancelar");
		btnCancelar.setBounds(39, 299, 89, 23);
		btnCancelar.addActionListener(this);
		contentPane.add(btnCancelar);
	}

	@Override
	public void actionPerformed(ActionEvent e) {

	}
}


UserDelete.java:

package gui;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import model.App;

public class UserDelete extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JLabel etiquetaBorrarUsuario;
	private JButton btnBorrar;
	private JButton btnCancelar;
	private App app;
	private String nombreUsuario;

	public UserDelete(App app, String nombreUsuario) {
		this.app = app;
		this.nombreUsuario = nombreUsuario;
		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 316, 147);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);

		etiquetaBorrarUsuario = new JLabel("¿Está seguro de que quiere borrar su usuario?");
		etiquetaBorrarUsuario.setFont(new Font("Tahoma", Font.BOLD, 12));
		etiquetaBorrarUsuario.setBounds(10, 11, 296, 34);
		contentPane.add(etiquetaBorrarUsuario);

		btnBorrar = new JButton("Borrar");
		btnBorrar.setBounds(170, 56, 89, 23);
		btnBorrar.addActionListener(this);
		btnBorrar.setBackground(Color.decode("#e74c3c"));
		btnBorrar.setForeground(Color.decode("#ecf0f1"));
		contentPane.add(btnBorrar);

		btnCancelar = new JButton("Cancelar");
		btnCancelar.setBounds(35, 56, 89, 23);
		btnCancelar.addActionListener(this);
		contentPane.add(btnCancelar);
	}

	@Override
	public void actionPerformed(ActionEvent e) {


	}

}


UserDetails:

package gui;

import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.*;
import javax.swing.border.EmptyBorder;

import model.App;

public class UserDetails extends JFrame implements ActionListener {

	private JPanel contentPane;
	private JLabel etiquetaDatosUsuario;
	private JLabel etiquetaNombre;
	private JLabel etiquetaEdad;
	private JLabel etiquetaCorreo;
	private JTextPane datoNombre;
	private JTextPane datoEdad;
	private JTextPane datoCorreo;
	private JButton btnVolver;
	private JMenuItem xmlMenu;
	private JMenuItem jsonMenu;

	private App app;

	public UserDetails(App app, String nombreUsuario, String edad, String correo) {
		this.app = app;

		setTitle("Aplicación usuarios");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 304, 390);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		setLocationRelativeTo(null);
		setResizable(false);

		etiquetaDatosUsuario = new JLabel("Datos usuario");
		etiquetaDatosUsuario.setHorizontalAlignment(SwingConstants.CENTER);
		etiquetaDatosUsuario.setFont(new Font("Tahoma", Font.BOLD, 16));
		etiquetaDatosUsuario.setBounds(64, 32, 169, 30);
		contentPane.add(etiquetaDatosUsuario);

		datoNombre = new JTextPane();
		datoNombre.setEditable(false);
		datoNombre.setBounds(64, 111, 169, 20);
		datoNombre.setText(nombreUsuario);
		contentPane.add(datoNombre);

		etiquetaNombre = new JLabel("Nombre:");
		etiquetaNombre.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaNombre.setBounds(64, 86, 57, 14);
		contentPane.add(etiquetaNombre);

		btnVolver = new JButton("Volver");
		btnVolver.setBounds(99, 278, 89, 23);
		btnVolver.addActionListener(this);
		contentPane.add(btnVolver);

		etiquetaEdad = new JLabel("Edad:");
		etiquetaEdad.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaEdad.setBounds(64, 142, 57, 14);
		contentPane.add(etiquetaEdad);

		datoEdad = new JTextPane();
		datoEdad.setEditable(false);
		datoEdad.setBounds(64, 167, 169, 20);
		datoEdad.setText(edad);
		contentPane.add(datoEdad);

		etiquetaCorreo = new JLabel("Correo electrónico:");
		etiquetaCorreo.setFont(new Font("Tahoma", Font.PLAIN, 12));
		etiquetaCorreo.setBounds(64, 209, 169, 14);
		contentPane.add(etiquetaCorreo);

		datoCorreo = new JTextPane();
		datoCorreo.setEditable(false);
		datoCorreo.setBounds(64, 234, 169, 20);
		datoCorreo.setText(correo);
		contentPane.add(datoCorreo);


		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);

		JMenu exportarMenu = new JMenu("Exportar");
		menuBar.add(exportarMenu);

		xmlMenu = new JMenuItem("XML");
		jsonMenu = new JMenuItem("JSON");

		xmlMenu.addActionListener(this);
		jsonMenu.addActionListener(this);

		exportarMenu.add(xmlMenu);
		exportarMenu.add(jsonMenu);
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		if(e.getSource() == xmlMenu) {
			System.out.println("Exportar usuario (XML)");
			JFileChooser fileChooser = new JFileChooser();
			fileChooser.setSelectedFile(new File("usuario.xml"));
			int returnValue = fileChooser.showOpenDialog(null);

			if (returnValue == JFileChooser.APPROVE_OPTION) {
				File selectedFile = fileChooser.getSelectedFile();
				System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
			} else {
				System.out.println("Selección de archivo cancelada.");
			}
		}

		if(e.getSource() == jsonMenu) {
			System.out.println("Exportar usuario (JSON)");
			JFileChooser fileChooser = new JFileChooser();
			fileChooser.setSelectedFile(new File("usuario.json"));
			int returnValue = fileChooser.showOpenDialog(null);

			if (returnValue == JFileChooser.APPROVE_OPTION) {
				File selectedFile = fileChooser.getSelectedFile();
				System.out.println("Archivo seleccionado: " + selectedFile.getAbsolutePath());
			} else {
				System.out.println("Selección de archivo cancelada.");
			}
		}
	}
}
