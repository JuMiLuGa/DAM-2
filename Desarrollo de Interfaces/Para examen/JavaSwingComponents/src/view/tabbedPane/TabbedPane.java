/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.tabbedPane;

import java.awt.event.ActionListener;

/**
 *
 * @author fermigo
 */
public class TabbedPane extends javax.swing.JDialog {

    /**
     * Creates new form TabbedPane
     */
    public TabbedPane(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbedPaneLabel = new javax.swing.JLabel();
        componentsTabbedPane = new javax.swing.JTabbedPane();
        progressBarPanel = new javax.swing.JPanel();
        diProgressBar = new javax.swing.JProgressBar();
        increaseProgressBarButton = new javax.swing.JButton();
        sliderPanel = new javax.swing.JPanel();
        diSlider = new javax.swing.JSlider();
        getSliderValueButton = new javax.swing.JButton();
        spinnerPanel = new javax.swing.JPanel();
        diSpinner = new javax.swing.JSpinner();
        getSpinnerValueButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabbedPaneLabel.setText("Tabbed Pane");

        componentsTabbedPane.setToolTipText("Progress Bar");

        increaseProgressBarButton.setText("Increase Progress Bar");
        increaseProgressBarButton.setToolTipText("Increase Progress Bar");

        javax.swing.GroupLayout progressBarPanelLayout = new javax.swing.GroupLayout(progressBarPanel);
        progressBarPanel.setLayout(progressBarPanelLayout);
        progressBarPanelLayout.setHorizontalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, progressBarPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(increaseProgressBarButton)))
                .addContainerGap())
        );
        progressBarPanelLayout.setVerticalGroup(
            progressBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(progressBarPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(diProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(increaseProgressBarButton)
                .addContainerGap())
        );

        componentsTabbedPane.addTab("Progress Bar", progressBarPanel);

        diSlider.setMajorTickSpacing(10);
        diSlider.setMinorTickSpacing(10);
        diSlider.setPaintTicks(true);
        diSlider.setSnapToTicks(true);

        getSliderValueButton.setText("Get value");

        javax.swing.GroupLayout sliderPanelLayout = new javax.swing.GroupLayout(sliderPanel);
        sliderPanel.setLayout(sliderPanelLayout);
        sliderPanelLayout.setHorizontalGroup(
            sliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sliderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(diSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 376, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sliderPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(getSliderValueButton)))
                .addContainerGap())
        );
        sliderPanelLayout.setVerticalGroup(
            sliderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sliderPanelLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(diSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 123, Short.MAX_VALUE)
                .addComponent(getSliderValueButton)
                .addContainerGap())
        );

        componentsTabbedPane.addTab("Slider", sliderPanel);

        getSpinnerValueButton.setText("Get spinner value");

        javax.swing.GroupLayout spinnerPanelLayout = new javax.swing.GroupLayout(spinnerPanel);
        spinnerPanel.setLayout(spinnerPanelLayout);
        spinnerPanelLayout.setHorizontalGroup(
            spinnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spinnerPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(diSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, spinnerPanelLayout.createSequentialGroup()
                .addGap(0, 245, Short.MAX_VALUE)
                .addComponent(getSpinnerValueButton))
        );
        spinnerPanelLayout.setVerticalGroup(
            spinnerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(spinnerPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(diSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                .addComponent(getSpinnerValueButton)
                .addContainerGap())
        );

        componentsTabbedPane.addTab("Spinner", spinnerPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(componentsTabbedPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tabbedPaneLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabbedPaneLabel)
                .addGap(18, 18, 18)
                .addComponent(componentsTabbedPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addIncreaseProgressbarButton(ActionListener listener) {
        this.increaseProgressBarButton.addActionListener(listener);
    }

    public void addGetSliderValueButton(ActionListener listener) {
        this.getSliderValueButton.addActionListener(listener);
    }

    public int getProgressBarMaxValue() {
        return this.diProgressBar.getMaximum();
    }

    public int getProgressBarValue() {
        return this.diProgressBar.getValue();
    }

    public void setProgressBarValue(int value) {
        this.diProgressBar.setValue(value);
    }

    public int getSliderValue() {
        return this.diSlider.getValue();
    }

    public void addGetSpinnerValueButtonButton(ActionListener listener) {
        this.getSpinnerValueButton.addActionListener(listener);
    }

    public int getSpinnerValue() {
        return (int) this.diSpinner.getValue();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane componentsTabbedPane;
    private javax.swing.JProgressBar diProgressBar;
    private javax.swing.JSlider diSlider;
    private javax.swing.JSpinner diSpinner;
    private javax.swing.JButton getSliderValueButton;
    private javax.swing.JButton getSpinnerValueButton;
    private javax.swing.JButton increaseProgressBarButton;
    private javax.swing.JPanel progressBarPanel;
    private javax.swing.JPanel sliderPanel;
    private javax.swing.JPanel spinnerPanel;
    private javax.swing.JLabel tabbedPaneLabel;
    // End of variables declaration//GEN-END:variables
}
